# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  hardware.opengl = {
    enable = true;
    driSupport = true;
    extraPackages = with pkgs; [ amdvlk ];
  };

  boot = {
    initrd = {
      kernelModules = [ "dm-snapshot" "amdgpu" ];
      availableKernelModules = [
        "ahci"
        "ohci_pci"
        "ehci_pci"
        "pata_atiixp"
        "xhci_pci"
        "usb_storage"
        "usbhid"
        "sd_mod"
      ];
    };
    extraModulePackages = [ ];
    kernelModules = [ "kvm-amd" ];
    tmpOnTmpfs = true;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/5f78a007-da6b-4110-9bfc-226340acb8a1";
    fsType = "xfs";
    options = [ "logbsize=256k" ];
  };

  boot.initrd.luks.devices = {
    nix_root = {
      device = "/dev/disk/by-uuid/c10b9174-531e-43e3-abfe-05a4f0397e2e";
      #      preLVM = false; # don't need it if running systemd initrd
      allowDiscards = true;
    };
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/7BD7-B0DE";
    fsType = "vfat";
  };

  swapDevices = [{
    device = "/dev/disk/by-partuuid/5f92a962-fe03-4dbd-8276-99b76bdadb36";
    options = [ "defaults" "nofail" ];
    discardPolicy = "once";
    randomEncryption = {
      enable = true;
      allowDiscards = true;
    };
  }];

  fileSystems."/mnt/backups" = {
    device = "/dev/disk/by-partuuid/adb52c4f-f46b-45d0-89ac-de20809792b4";
    options = [ "defaults" "nosuid" "noatime" "nofail" "noexec" "group" "nodev" "x-gvfs-show" ]; #"noauto" 
    fsType = "auto";
  };

  fileSystems."/mnt/vdisks" = {
    device = "/dev/disk/by-partuuid/0f8a8858-d062-4d79-a044-042991490a0b";
    options = [ "defaults" "nosuid" "noatime" "nofail" "noexec" "group" "nodev" "x-gvfs-show" ];
    fsType = "auto";
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
}
